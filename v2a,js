(function($){
 const $d=$.document, $dt=$d.doctype, $dl=$d.location, frag=$d.createDocumentFragment();

 const absolutize=(function(a){
	function g(x){const e=a;e.href=x;return e.href}
	function h(n,t){const m=[],p=e,f=g;for(const x of n){const y=t,s=x.getAttribute(y);if(p.test(s)!==true){x.setAttribute(y,f(s))};m[m.length]=x};return m}
	const e=/^((https?|data):|www\.)/i;
	return function(x){h(frag.querySelectorAll('['+x+']'),x)}
 })(frag.appendChild($d.createElement('a')));
 
 const $dE=frag.appendChild($d.documentElement.cloneNode(true)), $head=$dE.querySelector('head');
 let x=$dE.dataset;
 x.scrollX=$.scrollX;
 x.scrollY=$.scrollY;
 //
 absolutize('href');
 absolutize('src');
 //
 $head.insertBefore($d.createElement('base'),$head.firstChild).href=[$dl.protocol,$dl.host].join('//');
 //
 $.open(URL.createObjectURL(new Blob([(new TextEncoder()).encode(['<!DOCTYPE\u0020',$dt.name,(x=$dt.publicId)?'\u0020PUBLIC\u0020"'+x+'"':'',(x=$dt.systemId)?'\u0020"'+x+'"':'','>',new XMLSerializer().serializeToString($dE)].join(''))],{type:'text/html'})));
})(window);
